import Image from 'next/image'
import styles from './page.module.css'
import { getClient } from "@/lib/client";
import { gql } from "@apollo/client";

// revalidate graphql/fetch request (next will cached request forever if not set)
export const revalidate = 5;

// const query = gql`query Now {
//     now(id: "1")
// }`;

const query = gql`query Countries {
    countries {
      code
      name
      emoji
    }
  }
`;

export default async function Home() {
  const { data } = await getClient().query({
    query,
    // context: {
    //   fetchOptions: {
    //     next: { revalidate: 5 }
    //   }
    // }
  });

  return (
    <main className={styles.main}>
      <div className={styles.description}>
        <p>
          Get started by editing&nbsp;
          <code className={styles.code}>src/app/page.tsx</code>
        </p>
        <div>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            By{' '}
            <Image
              src="/vercel.svg"
              alt="Vercel Logo"
              className={styles.vercelLogo}
              width={100}
              height={24}
              priority
            />
          </a>
        </div>
      </div>

      <div className={styles.center}>
        <Image
          className={styles.logo}
          src="/next.svg"
          alt="Next.js Logo"
          width={180}
          height={37}
          priority
        />
      </div>

      <div className={styles.grid}>
        { data.countries.map((country: {code: string, name: string, emoji: string}) => (
          <div key={country.code} className={styles.card}>
            <h3>
              <a href="#country-name" aria-hidden="true" className="aal_anchor" id="country-name">
                <svg aria-hidden="true" className="aal_svg" height="16" version="1.1" viewBox="0 0 16 16" width="16">
                  <path fillRule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
                </svg>
              </a>{country.name}
            </h3>
            <p>
              {country.code} - {country.emoji}
            </p>
          </div>
        ))}
      </div>
    </main>
  )
}
